apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply from: 'andResGuard.gradle'

static String releaseDate() {
    return "\"" + new Date().format("yyyy-MM-dd HH:mm", TimeZone.getDefault()) + "\""
}

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'
    defaultConfig {
        applicationId 'com.adups.fota'
        minSdkVersion 19
        targetSdkVersion 29
        versionName '5.28'//真实版本号 注：发布版本至google需将fota无关的整合去掉
        versionCode 215
        buildConfigField "String", "APK_BUILD_DATE", releaseDate()
        flavorDimensions "versionCode"
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    dexOptions {
        preDexLibraries = false
    }

    signingConfigs {
        release {
            storeFile file('fota.keystore')
            storePassword "1q2w3e4r5t6y7u8i9o0p"
            keyAlias "fota.keystore"
            keyPassword "1q2w3e4r5t6y7u8i9o0p"
        }
//        release {
//            storeFile file('doogee.keystore')
//            storePassword "android"
//            keyAlias "androiddebugkey"
//            keyPassword "android"
//        }
    }

    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/DEPENDENCIES.txt'
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    if (outputFileName != null && outputFileName.endsWith('.apk')) {
                        outputFileName = "FOTA${versionName}_${variant.flavorName}_" + new Date().format("yyyyMMdd", TimeZone.getTimeZone("UTC")) + ".apk"
                    }
                }
            }
        }
        debug {

        }
    }

    def versionMajor = '.006'
    def redMineId = '26710'
    def customer = (redMineId == null || redMineId == '') ? '1' : '2'
    productFlavors {
        withIcon {
            buildConfigField "String", "AND_VERSION", "\".1.${customer}${redMineId}${versionMajor}\""
        }
        noIcon {
            buildConfigField "String", "AND_VERSION", "\".0.${customer}${redMineId}${versionMajor}\""
        }
    }

}

/*删除原classes.jar，通过获取sdk路径下jar包使用隐藏api*/

def getLayoutLibPath() {
    return "${android.getSdkDirectory().getAbsolutePath()}" + "/platforms/android-25/data/layoutlib.jar"
}

repositories { flatDir { dirs 'libs' } }
dependencies {
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.okhttp:okhttp:2.7.5'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'com.google.firebase:firebase-messaging:20.0.0'
    compileOnly files(getLayoutLibPath())
    implementation files('libs/zip4j_1.3.2.jar')
    implementation files('libs/commons-compress-1.9.jar')
}